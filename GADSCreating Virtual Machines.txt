#Lab:Creating Virtual Machines
##Objectives

-Create several standard VMs

-Create advanced VMs

#Task 1: Create a utility virtual machine
##Steps:
-Create a VM
-In the Cloud Console, on the Navigation menu , click Compute Engine > VM instances.

-Click Create.

-For Name, type a name for your instance. Hover over the question mark icon for advice about what constitutes a properly formed name.

    gcloud beta compute --project=qwiklabs-gcp-01-ad013b4e2f45 instances 
    create myfirstvm --

-For Region and Zone select us-central1 and us-central1-c respectively.

    zone=us-central1-c --

-For Machine type, examine the options.
    machine-type=n2-standard-4--
-Notice that the menu lists the number of vCPUs, the amount of memory, and a symbolic name such as n1-standard-1. The symbolic name is the parameter you would use to select the machine type if you were creating a VM using the gcloud command. Notice to the right of the zone and machine type that there is a per-month estimated cost.

-Click Details to the right of the Machine type list to see the breakdown of estimated costs.

-For Machine type, click n1-standard-4 (4 vCPUs, 15 GB memory). How did the cost change?

-For Machine type, click n1-standard-1 (1 vCPUs, 3.75 GB memory).

-Click Management, security, disks, networking, sole tenancy.

-Click Networking.

    subnet=default --no-address
 
-For Network interfaces, click the Edit icon (Edit).

-Select None for External IP.
    no-address
-Click Done.


#My first utility virtual machine 
    gcloud beta compute --project=qwiklabs-gcp-01-ad013b4e2f45 instances 
    create myfirstvm --zone=us-central1-c --machine-type=n2-standard-4 --subnet=default --no-address
    --maintenance-policy=MIGRATE --service-account=948379736695-compute@developer.gserviceaccount.com
    --scopes=https://www.googleapis.com/auth/devstorage.read_only,
    https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,
    https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly
    ,https://www.googleapis.com/auth/trace.append --image=debian-10-buster-v20200910 --image-project=debian-cloud
    --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=myfirstvm --no-shielded-secure-boot --no-shielded-vtpm
    --no-shielded-integrity-monitoring --reservation-affinity=any


#Task 2: Create a Windows virtual machine
##Steps:
-Create a VM
-On the Navigation menu , click Compute Engine > VM instances.

-Click Create instance.

-Specify the following, and leave the remaining settings as their defaults:

-Property	Value (type value or select option as specified)
-Name	Type a name for your VM
-Region	europe-west2
-Zone	europe-west2-a
-Machine type	n1-standard-2(2 vCPUs, 7.5 GB memory)
-Boot disk	Change
-Public Images > Operating system	Windows Server
-Version	Windows Server 2016 Datacenter Core
-Boot disk type	SSD persistent disk
-Size (GB)	100

-Click Select.

-For Firewall, enable Allow HTTP traffic and Allow HTTPS traffic.

    --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append 
    --tags=http-server,https-server 

-Click Create.

#Windows virtual machine

    gcloud beta compute --project=qwiklabs-gcp-01-ad013b4e2f45 instances create mysecondvm
    --zone=europe-west2-a
    --machine-type=n1-standard-2
    --subnet=default
    --network-tier=PREMIUM --maintenance-policy=MIGRATE --service-account=948379736695-compute@developer.gserviceaccount.com
    --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append 
    --tags=http-server,https-server 
    --image=windows-server-2016-dc-core-v20200908 
    --image-project=windows-cloud
    --boot-disk-size=100GB
    --boot-disk-type=pd-ssd
    --boot-disk-device-name=mysecondvm
    --no-shielded-secure-boot
    --shielded-vtpm 
    --shielded-integrity-monitoring --reservation-affinity=any

    gcloud compute --project=qwiklabs-gcp-01-ad013b4e2f45 firewall-rules create default-allow-http 
    --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:80
    --source-ranges=0.0.0.0/0 --target-tags=http-server

    gcloud compute --project=qwiklabs-gcp-01-ad013b4e2f45 firewall-rules create default-allow-https
    --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:443 --source-ranges=0.0.0.0/0
    --target-tags=https-server


##Set the password for the VM

-Click on the name of your Windows VM to access the VM instance details.

-You don't have a valid password for this Windows VM: you cannot log in to the Windows VM without a password. Click Set Windows password.

-Click Set.

#Task 3: Create a custom virtual machine
##Steps:
-Create a VM
-On the Navigation menu , click Compute Engine > VM instances.

-Click Create instance.

-Specify the following, and leave the remaining settings as their defaults:
-Property	Value (type value or select option as specified)
-Name	Type a name for your VM
-Region	us-west1
-Zone	us-west1-b
-Machine type	Custom
-Cores	6 vCPU
-Memory	32 GB
-Click Create.

#Connect via SSH to your custom VM
##Steps:
For the custom VM you just created, click SSH.
    gcloud compute ssh Mysecondvm--


-To see information about unused and used memory and swap space on your custom VM, run the following command:

    free

    total        used        free      shared  buff/cache   available
    Mem:       32943884      231508    32579540        8504      132836    32378096
    Swap:             0           0           0
-To see details about the RAM installed on your VM, run the following command:

    sudo dmidecode -t 17
    # dmidecode 3.2
    Getting SMBIOS data from sysfs.
    SMBIOS 2.4 present.
    Handle 0x7000, DMI type 17, 21 bytes
    Memory Device
    Array Handle: 0x0200
    Error Information Handle: Not Provided
    Total Width: 64 bits
    Data Width: 64 bits
    Size: 16384 MB
    Form Factor: DIMM
    Set: None
    Locator: DIMM 0
    Bank Locator: Not Specified
    Type: RAM
    Type Detail: Synchronous
    Handle 0x7001, DMI type 17, 21 bytes
    Memory Device
    Array Handle: 0x0200
    Error Information Handle: Not Provided
    Total Width: 64 bits
    Data Width: 64 bits
    Size: 16384 MB
    Form Factor: DIMM
    Set: None
    Locator: DIMM 1
    Bank Locator: Not Specified
    Type: RAM
    Type Detail: Synchronous
-To verify the number of processors, run the following command:

    nproc

    6
-To see details about the CPUs installed on your VM, run the following command:

    lscpu

    Architecture:        x86_64
    CPU op-mode(s):      32-bit, 64-bit
    Byte Order:          Little Endian
    Address sizes:       46 bits physical, 48 bits virtual
    CPU(s):              6
    On-line CPU(s) list: 0-5
    Thread(s) per core:  2
    Core(s) per socket:  3
    Socket(s):           1
    NUMA node(s):        1
    Vendor ID:           GenuineIntel
    CPU family:          6
    Model:               79
    Model name:          Intel(R) Xeon(R) CPU @ 2.20GHz
    Stepping:            0
    CPU MHz:             2200.000
    BogoMIPS:            4400.00
    Hypervisor vendor:   KVM
    Virtualization type: full
    L1d cache:           32K
    L1i cache:           32K
    L2 cache:            256K
    L3 cache:            56320K
    NUMA node0 CPU(s):   0-5
    Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse s
    se2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pc
    lmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dno
    wprefetch invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm rdse
    ed adx smap xsaveopt arat md_clear arch_capabilities

-To exit the SSH terminal, run the following command:
    exit
C